{
  "_args": [
    [
      {
        "raw": "chart-stream",
        "scope": null,
        "escapedName": "chart-stream",
        "name": "chart-stream",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\xampp\\htdocs\\npmtest"
    ]
  ],
  "_from": "chart-stream@latest",
  "_id": "chart-stream@1.1.1",
  "_inCache": true,
  "_location": "/chart-stream",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/chart-stream-1.1.1.tgz_1486162044941_0.7936920495703816"
  },
  "_npmUser": {
    "name": "watson",
    "email": "w@tson.dk"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "chart-stream",
    "scope": null,
    "escapedName": "chart-stream",
    "name": "chart-stream",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/chart-stream/-/chart-stream-1.1.1.tgz",
  "_shasum": "847f1f64d181e2a8c31be0bd6274c5726a63a230",
  "_shrinkwrap": null,
  "_spec": "chart-stream",
  "_where": "C:\\xampp\\htdocs\\npmtest",
  "author": {
    "name": "Thomas Watson Steen",
    "email": "w@tson.dk",
    "url": "https://twitter.com/wa7son"
  },
  "bin": {
    "chart-stream": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/watson/chart-stream/issues"
  },
  "coordinates": [
    55.77758371558855,
    12.589823731213414
  ],
  "dependencies": {
    "ecstatic": "^2.1.0",
    "opn": "^4.0.2",
    "pump": "^1.0.2",
    "readable-stream": "^2.2.2",
    "sse-stream": "^0.0.5"
  },
  "description": "Chart time series data from either STDIN or programmatically from any Node.js app in real time directly in your browser",
  "devDependencies": {
    "csv-write-stream": "^2.0.0",
    "memory-usage": "^1.0.0",
    "standard": "^8.6.0",
    "tape": "^4.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "847f1f64d181e2a8c31be0bd6274c5726a63a230",
    "tarball": "https://registry.npmjs.org/chart-stream/-/chart-stream-1.1.1.tgz"
  },
  "gitHead": "b3ff0b498680a4ed689bd87cf6f20227c1d61185",
  "homepage": "https://github.com/watson/chart-stream#readme",
  "keywords": [
    "chart",
    "graph",
    "plot",
    "diagram",
    "line",
    "time-series",
    "realtime",
    "browser",
    "stream"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "watson",
      "email": "w@tson.dk"
    }
  ],
  "name": "chart-stream",
  "optionalDependencies": {},
  "readme": "# chart-stream\n\nChart time series data from either STDIN or programmatically from any\nNode.js app in real time directly in your browser.\n\n![chart](https://cloud.githubusercontent.com/assets/10602/20244560/99a7e1e4-a9ca-11e6-809f-0370491106ad.png)\n\n[![Build status](https://travis-ci.org/watson/chart-stream.svg?branch=master)](https://travis-ci.org/watson/chart-stream)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n## Installation\n\nUse from the command line:\n\n```\nnpm install chart-stream -g\n```\n\nUse programmatically:\n\n```\nnpm install chart-stream --save\n```\n\n## CLI Usage\n\nPipe CSV data into STDIN of the `chart-stream` binary. Your default\nbrowser will then automatically be opened and the CSV data will be\nplotted live in a chart directly in your browser:\n\n```\nnode examples/hyperbel.js | chart-stream\n```\n\n`chart-stream` expects the input to contain an optional header row\nfollowed by rows of numbers. If the optional header row is given, the\nheaders will be used as labels in the chart. Each column of numbers will\nbe plotted as a line in the graph.\n\n## Programmatic Usage\n\n```js\nvar chart = require('chart-stream')\nvar csvWriter = require('csv-write-stream')\nvar memoryUsage = require('memory-usage')\n\nmemoryUsage(2000)\n  .pipe(csvWriter())\n  .pipe(chart(ready))\n\nfunction ready (url) {\n  console.log('Open %s in your browser to see the chart', url)\n}\n```\n\n## API\n\nThe `chart-stream` module exposes a function which when called will\nreturn a writable stream and create an HTTP server which serves the\nchart. The function expects a callback as its only argument. The\ncallback will be called with the URL for the chart.\n\nWhen CSV data is written to the returned stream, the chart will be\nupdated, plotting the data from the stream.\n\nThe stream expects an optional header row followed by rows of numbers.\nIf the optional header row is given, the headers will be used as labels\nin the chart. Each column of numbers will be plotted as a line in the\ngraph.\n\n```js\nvar chart = require('chart-stream')(function (url) {\n  console.log('Open %s in your browser to see the chart', url)\n})\n\nchart.write('x*2,y/2')\nplot(1, Math.pow(2, 30))\n\nfunction plot (x, y) {\n  chart.write(x + ',' + y)\n  if (y <= 1) return\n  setTimeout(plot, 100, x * 2, Math.round(y / 2))\n}\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/watson/chart-stream.git"
  },
  "scripts": {
    "test": "standard && node test.js"
  },
  "version": "1.1.1"
}
